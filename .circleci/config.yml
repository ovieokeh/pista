version: 2.0
defaults: &defaults
  working_directory: ~/repo
  environment:
    NODE_ENV: test
  docker:
    - image: circleci/node:10.16

jobs:
  build:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  backend-tests:
    <<: *defaults
    docker:
      - image: circleci/postgres:11.3
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    environment:
      NODE_ENV: test
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Install packages
          command: cd ./packages/backend && npm install
      - run:
          name: Migrate database
          environment:
            DATABASE_TEST_USERNAME: root
            DATABASE_TEST_NAME: circle_test
            DATABASE_HOST: localhost
          command: cd ./packages/backend && npm run migrate
      - run:
          name: Run backend tests
          command: cd ./packages/backend && npm test
      - run:
          name: Generate coverage
          command: cd ./packages/backend && npm run coverage
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.backend.json

  frontend-tests:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Install packages
          command: cd ./packages/frontend && npm install
      - run:
          name: Run frontend testss
          command: cd ./packages/frontend && npm test
      - run:
          name: Generate coverage
          command: cd ./packages/frontend && npm run coverage
      - persist_to_workspace:
          root: tmp
          paths:
            - codeclimate.frontend.json

  upload-coverage:
    <<: *defaults
    environment:
      - CC_TEST_REPORTER_ID: 3e297fe26f02c9cd8fb8ef0bbb1a32ed30cf713c797a4c5c064dbee2bea9f778
    steps:
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 2 -o tmp/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json

workflows:
  version: 2

  commit:
    jobs:
      - build
      - backend-tests:
          requires:
            - build
      - frontend-tests:
          requires:
            - build
      - upload-coverage:
          requires:
            - backend-tests
            - frontend-tests
